name: Publish to NPM and GitHub Releases

on:
  workflow_run:
    workflows: ["Comprehensive Tests", "Memory Check Cross-Platform", "Documentation Validation"]
    types:
      - completed
    branches: [ main ]

jobs:
  check-prerequisites:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    steps:
    - name: Tests failed - skipping publish
      run: |
        echo "❌ Workflow '${{ github.event.workflow_run.name }}' failed"
        echo "Publishing is skipped when tests fail"
        exit 0

  check-version:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.check.outputs.should_publish }}
      version: ${{ steps.check.outputs.version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check if version is new
      id: check
      run: |
        VERSION=$(node -p "require('./package.json').version")
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        
        # Check if version is already published on NPM
        if npm view "$PACKAGE_NAME@$VERSION" version 2>/dev/null; then
          echo "Version $VERSION already published"
          echo "should_publish=false" >> $GITHUB_OUTPUT
        else
          echo "New version $VERSION detected"
          echo "should_publish=true" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        fi

  publish:
    needs: check-version
    if: needs.check-version.outputs.should_publish == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
      packages: write  # Required for publishing packages
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Make scripts executable
      run: |
        chmod +x hive.mjs
        chmod +x solve.mjs
        
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=${{ needs.check-version.outputs.version }}
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        gh release create "v${VERSION}" \
          --title "${VERSION}" \
          --notes "https://www.npmjs.com/package/${PACKAGE_NAME}/v/${VERSION}"